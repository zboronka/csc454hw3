!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/3fdf28bc/
ATTACH	Makefile	/^ATTACH=-connect com.sun.jdi.SocketAttach:hostname=localhost,port=8000$/;"	m
CC	Makefile	/^CC=javac$/;"	m
CLASS	Makefile	/^CLASS=hw3$/;"	m
Couple	Couple.java	/^public class Couple<I> {$/;"	c
DEBUGGER	Makefile	/^DEBUGGER=jdb$/;"	m
DFLAGS	Makefile	/^DFLAGS=-agentlib:jdwp=transport=dt_socket,address=8000,server=y,suspend=n$/;"	m
FLAGS	Makefile	/^FLAGS=-g$/;"	m
JVM	Makefile	/^JVM=java$/;"	m
LIBS	Makefile	/^LIBS=$/;"	m
Memory	Memory.java	/^public class Memory implements MooreMachine<Boolean, Boolean> {$/;"	c
MooreMachine	MooreMachine.java	/^interface MooreMachine<I,O> {$/;"	i
Network	Network.java	/^	public Network(Couple<O> out, int t) {$/;"	m	class:Network
Network	Network.java	/^public class Network<I,O> implements MooreMachine<I,O> {$/;"	c
SOURCE	Makefile	/^SOURCE=*.java$/;"	m
TARGET	Makefile	/^TARGET=$/;"	m
XOR	XOR.java	/^public class XOR implements MooreMachine<Boolean, Boolean> {$/;"	c
addCouple	Network.java	/^	public void addCouple(Couple<?> couple) {$/;"	m	class:Network
addInput	Couple.java	/^	public void addInput(MooreMachine<?,I> in) {$/;"	m	class:Couple
addOutput	Couple.java	/^	public void addOutput(MooreMachine<I,?> out) {$/;"	m	class:Couple
all	Makefile	/^all:$/;"	t
couples	Network.java	/^	private ArrayList<Couple<?>> couples = new ArrayList<Couple<?>>();$/;"	f	class:Network	file:
debug	Makefile	/^debug:$/;"	t
delta	Memory.java	/^	public void delta(ArrayList<Boolean> b) {$/;"	m	class:Memory
delta	MooreMachine.java	/^	void delta(ArrayList<I> input);$/;"	m	interface:MooreMachine
delta	Network.java	/^	public void delta(ArrayList<I> input) {$/;"	m	class:Network
delta	XOR.java	/^	public void delta(ArrayList<Boolean> b) {$/;"	m	class:XOR
deltas	Couple.java	/^	public void deltas() {$/;"	m	class:Couple
get	Couple.java	/^	public ArrayList<I> get() {$/;"	m	class:Couple
hw3	hw3.java	/^public class hw3 {$/;"	c
inputs	Couple.java	/^	private ArrayList<MooreMachine<?,I>> inputs = new ArrayList<>();$/;"	f	class:Couple	file:
lambda	Memory.java	/^	public Boolean lambda() {$/;"	m	class:Memory
lambda	MooreMachine.java	/^	O lambda();$/;"	m	interface:MooreMachine
lambda	Network.java	/^	public O lambda() {$/;"	m	class:Network
lambda	XOR.java	/^	public Boolean lambda() {$/;"	m	class:XOR
main	hw3.java	/^	public static void main(String[] args) {$/;"	m	class:hw3
output	Couple.java	/^	private ArrayList<I> output = new ArrayList<>();$/;"	f	class:Couple	file:
output	Network.java	/^	private Couple<O> output;$/;"	f	class:Network	file:
outputs	Couple.java	/^	private ArrayList<MooreMachine<I,?>> outputs = new ArrayList<>();$/;"	f	class:Couple	file:
pipe	Couple.java	/^	public void pipe() {$/;"	m	class:Couple
q1	Memory.java	/^	private Boolean q1 = false;$/;"	f	class:Memory	file:
q2	Memory.java	/^	private Boolean q2 = false;$/;"	f	class:Memory	file:
server	Makefile	/^server:$/;"	t
state	XOR.java	/^	private Boolean state = false;$/;"	f	class:XOR	file:
ticks	Network.java	/^	private int ticks;$/;"	f	class:Network	file:
